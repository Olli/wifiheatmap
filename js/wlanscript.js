// Generated by CoffeeScript 1.9.3
(function() {
  var HMMap, HMSite, WiFiData;

  WiFiData = (function() {
    function WiFiData() {
      this.netNames = [];
      this.netdata = {};
      this.getData();
    }

    WiFiData.prototype.initprocess = function() {
      var nd;
      nd = this.netdata;
      return this.data.forEach(function(a) {
        if (!nd.hasOwnProperty(a["ssid"])) {
          nd[a["ssid"]] = [];
        }
        return nd[a["ssid"]].push(a);
      });
    };

    WiFiData.prototype.putNetNames = function() {
      var nets;
      nets = [];
      this.data.forEach(function(net) {
        if (!(nets.indexOf(net["ssid"]) > -1)) {
          return nets.push(net["ssid"]);
        }
      });
      this.netNames = nets;
    };

    WiFiData.prototype.getAll = function() {
      var _this, data;
      data = [];
      _this = this;
      this.netNames.forEach(function(net) {
        return _this.netdata[net].forEach(function(value) {
          return data.push(value);
        });
      });
      return data;
    };

    WiFiData.prototype.getNetNames = function() {
      return this.netNames;
    };

    WiFiData.prototype.getNet = function(net) {
      return this.netdata[net];
    };

    WiFiData.prototype.getLoggings = function() {
      return this.netdata;
    };

    WiFiData.prototype.getData = function() {
      var _this, url;
      _this = this;
      url = 'data/wifilog.json';
      return $.ajax({
        type: 'GET',
        url: url,
        dataType: 'json',
        async: false,
        data: {},
        success: function(data) {
          _this.data = data;
          _this.initprocess();
          return _this.putNetNames();
        }
      });
    };

    return WiFiData;

  })();

  HMMap = (function() {
    function HMMap(wlandata) {
      this.wlandata = wlandata;
      this.initmap();
      this.setHeatMap(this.wlandata);
      return;
    }

    HMMap.prototype.setHeatMap = function(wlandata) {
      var hmConfig;
      this.wlandata = wlandata;
      hmConfig = {
        max: -50,
        min: -99,
        data: this.wlandata
      };
      this.heatmapLayer.setData(hmConfig);
    };

    HMMap.prototype.initmap = function(myheatmapdata) {
      var cfg;
      this.baseLayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
        maxZoom: 18
      });
      cfg = {
        "radius": 15,
        "maxOpacity": .8,
        "scaleRadius": false,
        "useLocalExtrema": false,
        latField: 'lat',
        lngField: 'lon',
        valueField: 'count',
        blur: 1
      };
      this.heatmapLayer = new HeatmapOverlay(cfg);
      this.map = new L.Map('map-canvas', {
        center: new L.LatLng(51.07642, 13.0121),
        zoom: 17,
        layers: [this.baseLayer, this.heatmapLayer]
      });
    };

    return HMMap;

  })();

  HMSite = (function() {
    function HMSite() {
      this.initializeHeatMap();
      this.setupNetSelectCB();
    }

    HMSite.prototype.initializeHeatMap = function() {
      this.logging = new WiFiData();
      window.wlanmap = this.hmap = new HMMap(this.logging.getLoggings);
      return this.fillSelect();
    };

    HMSite.prototype.fillSelect = function() {
      var networks;
      networks = this.logging.netNames;
      if (networks.length > 1) {
        $(".wlanselect").append("<option value=\"all\">Alle</option>");
      }
      return networks.forEach(function(netName) {
        return $(".wlanselect").append("<option value=\"" + netName + "\">" + netName + "</option>");
      });
    };

    HMSite.prototype.setupNetSelectCB = function() {
      var _this, key;
      _this = this;
      $('.wlanselect').on('change', function(event) {
        var key;
        key = $('.wlanselect option:selected').val();
        if (key === 'all') {
          _this.hmap.setHeatMap(_this.logging.getAll());
        } else {
          _this.hmap.setHeatMap(_this.logging.getNet(key));
        }
      });
      key = $('.wlanselect option:first').val();
      this.hmap.setHeatMap(this.logging.getAll);
    };

    return HMSite;

  })();

  window.onload = function() {
    return new HMSite;
  };

}).call(this);
